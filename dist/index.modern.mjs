import e from"node-forge";function t(){return t=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var r=arguments[t];for(var s in r)Object.prototype.hasOwnProperty.call(r,s)&&(e[s]=r[s])}return e},t.apply(this,arguments)}class r{constructor(e){this.userId=void 0,this.accessKey=void 0,this.baseUrl="http://locahost:9999",this.wssBaseUrl="ws://locahost:9999",this.userId=e.userId,this.accessKey=e.accessKey}messageEncryption(t){const{publicKey:r,userId:s,channelName:n,channelPassKey:a,replaySelf:c}=t,o=void 0!==c?`&replay_self=${c}`:"",i=`user_id=${s}&channel=${n}&channel_pass_key=${a}${o}`,l=e.pki.publicKeyFromPem(r).encrypt(i,"RSA-OAEP",{md:e.md.sha256.create()});return`${s}/${n}?encrypted_token=${e.util.encode64(l).replace(/\+/g,"-").replace(/\//g,"_").replace(/=+$/,"")}${o}`}connect(e){return new WebSocket(this.wssBaseUrl+this.messageEncryption(e))}request(e,r){const s=`${this.baseUrl}${e}`,n=t({},r,{headers:{"Content-Type":"application/json"}});return fetch(s,n).then(e=>{if(e.ok)return e.json();throw new Error(e.statusText)})}}const s="channel";class n extends r{}var a;a=n,[class extends r{createChannel(e){return this.request(`/${s}/create`,{method:"POST",body:JSON.stringify(e)})}updateChannel(e){return this.request(`/${s}/update`,{method:"POST",body:JSON.stringify(e)})}getChannelByName(e){return this.request(`/${s}/${null==e?void 0:e.channelName}/details`)}getChannels(e){const r=new URLSearchParams(t({},e));return this.request(`/${s}/list?${r}`)}}].forEach(e=>{Object.getOwnPropertyNames(e.prototype).forEach(t=>{Object.defineProperty(a.prototype,t,Object.getOwnPropertyDescriptor(e.prototype,t)||Object.create(null))})});export{n as default};
